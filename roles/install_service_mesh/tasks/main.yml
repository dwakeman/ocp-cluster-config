- name: Install Elasticsearch Operator
  k8s:
    state: present
    definition: "{{ lookup('template', 'elasticsearch-subscription.j2') }}"
  register: esResult

- name: Print out the result
  debug:
    var: esResult  

- name: Install Jaeger Operator
  k8s:
    state: present
    definition: "{{ lookup('template', 'jaeger-subscription.j2') }}"
  register: jaegerResult

- name: Print out the result
  debug:
    var: jaegerResult  

- name: Install Kiali Operator
  k8s:
    state: present
    definition: "{{ lookup('template', 'kiali-subscription.j2') }}"
  register: kialiResult

- name: Print out the result
  debug:
    var: kialiResult  

- name: Install Service Mesh Operator
  k8s:
    state: present
    definition: "{{ lookup('template', 'servicemesh-subscription.j2') }}"
  register: ossmResult

- name: Print out the result
  debug:
    var: ossmResult

- name: Pause for installations to start
  pause:
    seconds: "60"
    
- name: Get a list of all CSVs from any namespace
  k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
    namespace: openshift-operators
  register: csv_list

- name: Print out the result
  debug:
    var: csv_list

- name: Get the Service Mesh Operator CSV Name
  set_fact:
    serviceMeshCsvName:  "{{ item.metadata.name  }}"
  with_items: "{{ csv_list.resources }}"
  when: '"mesh" in item.metadata.name'

- name: Print out the result
  debug:
    var: serviceMeshCsvName

- name: Wait until CSV is Installed
  ignore_errors: yes
  command: oc get csv {{serviceMeshCsvName|quote}} -o jsonpath --template='{$.status.phase}' -n openshift-operators
  register: csv
  retries: 30
  delay: 10
  until: csv.stdout == "Succeeded"

- name: Print out the result
  debug:
    var: csv